buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven { // JEI
        name 'progwml6 maven'
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven { // CraftTweaker
        name 'blamejared maven'
        url "https://maven.blamejared.com/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // Code Chicken Lib 1.8+
        name 'chickenbones maven'
        url "http://chickenbones.net/maven/"
    }
}

version = "${mod_version}"
group = archivesBaseName = "${mod_id}"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    mappings = "${mappings_version}"
    makeObfSourceJar = false

    replaceIn "src/main/java/scoopy/Scoopy.java"
    replace "MOD_VERSION = \"99999.999.999\"", "MOD_VERSION = \"${mod_version}\""
    replace "MC_VERSION = \"\"", "MC_VERSION = \"[${mc_version}]\""
    replace "DEPENDENCIES = \"\"", "DEPENDENCIES = \"required-after:forge@[${forge_version_dep},);after:nutrition;after:gregtech;after:crafttweaker;\""
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    testCompile "junit:junit:${junit_version}"

    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"

    deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:${mc_version_major_minor}-${crafttweaker_version}"

    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:${mc_version_major_minor}-${theoneprobe_version}"

    compile files("libs/Nutrition-${mc_version}-${nutrition_version}.jar")

    deobfCompile "codechicken:CodeChickenLib:${mc_version}-${codechickenlib_version}:universal"

    compile files("libs/gregtech-${mc_version}-${gregtechce_version}.jar")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

runClient {
    args '--username', 'ScoopyDev'
}
